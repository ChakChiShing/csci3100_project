function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import * as React from 'react';
import warnOnce from 'warn-once';
import { useNavigationBuilder, createNavigatorFactory, TabRouter } from '@react-navigation/native';
import MaterialTopTabView from '../views/MaterialTopTabView';

function MaterialTopTabNavigator({
  initialRouteName,
  backBehavior,
  children,
  screenOptions,
  // @ts-expect-error: lazy is deprecated
  lazy,
  // @ts-expect-error: tabBarOptions is deprecated
  tabBarOptions,
  ...rest
}) {
  let defaultScreenOptions = {};

  if (tabBarOptions) {
    Object.assign(defaultScreenOptions, {
      tabBarActiveTintColor: tabBarOptions.activeTintColor,
      tabBarInactiveTintColor: tabBarOptions.inactiveTintColor,
      tabBarPressColor: tabBarOptions.pressColor,
      tabBarPressOpacity: tabBarOptions.pressOpacity,
      tabBarShowLabel: tabBarOptions.showLabel,
      tabBarShowIcon: tabBarOptions.showIcon,
      tabBarAllowFontScaling: tabBarOptions.allowFontScaling,
      tabBarBounces: tabBarOptions.bounces,
      tabBarScrollEnabled: tabBarOptions.scrollEnabled,
      tabBarIconStyle: tabBarOptions.iconStyle,
      tabBarLabelStyle: tabBarOptions.labelStyle,
      tabBarItemStyle: tabBarOptions.tabStyle,
      tabBarIndicatorStyle: tabBarOptions.indicatorStyle,
      tabBarIndicatorContainerStyle: tabBarOptions.indicatorContainerStyle,
      tabBarContentContainerStyle: tabBarOptions.contentContainerStyle,
      tabBarStyle: tabBarOptions.style
    });
    warnOnce(tabBarOptions, "Material Top Tab Navigator: 'tabBarOptions' is deprecated. Migrate the options to 'screenOptions' instead.\n\nPlace the following in 'screenOptions' in your code to keep current behavior:\n\n".concat(JSON.stringify(defaultScreenOptions, null, 2), "\n\nSee https://reactnavigation.org/docs/6.x/material-top-tab-navigator#options for more details."));
  }

  if (typeof lazy === 'boolean') {
    defaultScreenOptions.lazy = lazy;
    warnOnce(true, "Material Top Tab Navigator: 'lazy' in props is deprecated. Move it to 'screenOptions' instead.");
  }

  const {
    state,
    descriptors,
    navigation
  } = useNavigationBuilder(TabRouter, {
    initialRouteName,
    backBehavior,
    children,
    screenOptions
  });
  return /*#__PURE__*/React.createElement(MaterialTopTabView, _extends({}, rest, {
    state: state,
    navigation: navigation,
    descriptors: descriptors
  }));
}

export default createNavigatorFactory(MaterialTopTabNavigator);
//# sourceMappingURL=createMaterialTopTabNavigator.js.map