{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/apple/Desktop/M.Hero/project/csci3100_project/component/BudgetScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport 'react-native-gesture-handler';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useState } from \"react-native-web/dist/index\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar BudgetScreen = function (_React$Component) {\n  _inherits(BudgetScreen, _React$Component);\n\n  var _super = _createSuper(BudgetScreen);\n\n  function BudgetScreen(props) {\n    var _this;\n\n    _classCallCheck(this, BudgetScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      value: \"2000\",\n      currency: 'HKD$'\n    };\n    return _this;\n  }\n\n  _createClass(BudgetScreen, [{\n    key: \"_onPressButton\",\n    value: function _onPressButton(value) {\n      console.log(value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.header,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          marginBottom: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }\n      }, this.state.currency, this.state.value), React.createElement(TextInput, {\n        keyboardType: \"numeric\",\n        placeholder: \"change the value here\",\n        onChangeText: function onChangeText(val) {\n          return _this2.setState({\n            value: val\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.appButtonContainer,\n        onPress: this._onPressButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.appButtonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, \"Save \")));\n    }\n  }]);\n\n  return BudgetScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  header: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#CCFFFF',\n    width: 380,\n    height: 80,\n    padding: 8,\n    marginBottom: 80\n  },\n  appButtonContainer: {\n    elevation: 8,\n    backgroundColor: \"#009688\",\n    borderRadius: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 12,\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignContent: 'center'\n  },\n  appButtonText: {\n    fontSize: 28,\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  }\n});\nexport default BudgetScreen;","map":{"version":3,"sources":["/Users/apple/Desktop/M.Hero/project/csci3100_project/component/BudgetScreen.js"],"names":["React","Component","useState","BudgetScreen","props","state","value","currency","console","log","flex","justifyContent","alignContent","styles","header","fontSize","marginBottom","val","setState","appButtonContainer","_onPressButton","appButtonText","StyleSheet","create","container","backgroundColor","alignItems","width","height","padding","elevation","borderRadius","paddingVertical","paddingHorizontal","color","fontWeight","alignSelf","textTransform"],"mappings":";;;;;;;;;;;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;SAC2CC,Q;;;IAErCC,Y;;;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,MADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAFe;AAMhB;;;;WAED,wBAAeD,KAAf,EAAsB;AACpBE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD;;;WACL,kBAAQ;AAAA;;AAEN,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEI,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,cAAc,EAAE,QAA3B;AAAqCC,UAAAA,YAAY,EAAC;AAAlD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIC,MAAM,CAACC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAG;AAACC,UAAAA,QAAQ,EAAC,EAAV;AAAcC,UAAAA,YAAY,EAAC;AAA3B,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8C,KAAKX,KAAL,CAAWE,QAAzD,EAAmE,KAAKF,KAAL,CAAWC,KAA9E,CADA,EAEE,oBAAC,SAAD;AAEA,QAAA,YAAY,EAAC,SAFb;AAGA,QAAA,WAAW,EAAG,uBAHd;AAIA,QAAA,YAAY,EAAE,sBAACW,GAAD;AAAA,iBAAS,MAAI,CAACC,QAAL,CAAc;AAAEZ,YAAAA,KAAK,EAAEW;AAAT,WAAd,CAAT;AAAA,SAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADJ,EAYI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEJ,MAAM,CAACM,kBAAhC;AAAoD,QAAA,OAAO,EAAE,KAAKC,cAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACQ,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADI,CAZJ,CADF;AAoBD;;;;EAlCwBrB,KAAK,CAACC,S;;AAsC/B,IAAMY,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTd,IAAAA,IAAI,EAAE,CADG;AAETe,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITf,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BG,EAAAA,MAAM,EAAE;AACJY,IAAAA,UAAU,EAAE,QADR;AAEJf,IAAAA,cAAc,EAAE,QAFZ;AAGJc,IAAAA,eAAe,EAAE,SAHb;AAIJE,IAAAA,KAAK,EAAG,GAJJ;AAKJC,IAAAA,MAAM,EAAE,EALJ;AAMJC,IAAAA,OAAO,EAAE,CANL;AAOJb,IAAAA,YAAY,EAAC;AAPT,GAPuB;AAiB/BG,EAAAA,kBAAkB,EAAE;AAClBW,IAAAA,SAAS,EAAE,CADO;AAElBL,IAAAA,eAAe,EAAE,SAFC;AAGlBM,IAAAA,YAAY,EAAE,EAHI;AAIlBC,IAAAA,eAAe,EAAE,EAJC;AAKlBC,IAAAA,iBAAiB,EAAE,EALD;AAQlBtB,IAAAA,cAAc,EAAE,QARE;AASlBe,IAAAA,UAAU,EAAE,QATM;AAUlBd,IAAAA,YAAY,EAAE;AAVI,GAjBW;AA6B/BS,EAAAA,aAAa,EAAE;AACbN,IAAAA,QAAQ,EAAE,EADG;AAEbmB,IAAAA,KAAK,EAAE,MAFM;AAGbC,IAAAA,UAAU,EAAE,MAHC;AAIbC,IAAAA,SAAS,EAAE,QAJE;AAKbC,IAAAA,aAAa,EAAE;AALF;AA7BgB,CAAlB,CAAf;AAsCA,eAAelC,YAAf","sourcesContent":["import 'react-native-gesture-handler';\nimport React, { Component } from 'react';\nimport { StyleSheet, Text, View, TextInput,useState, TouchableOpacity } from 'react-native';\n\nclass BudgetScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          value: \"2000\",\n          currency: 'HKD$'\n        };\n      }\n\n      _onPressButton(value) {\n        console.log(value);\n      }\n  render(){\n\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignContent:'center', }}>\n          <View style = {styles.header}>\n          <Text style ={{fontSize:20, marginBottom:5}}>{this.state.currency}{this.state.value}</Text>\n            <TextInput \n            \n            keyboardType='numeric'\n            placeholder = \"change the value here\"\n            onChangeText={(val) => this.setState({ value: val})}\n            ></TextInput>\n          </View>\n\n\n          <TouchableOpacity style={styles.appButtonContainer} onPress={this._onPressButton}>\n      <Text style={styles.appButtonText}>Save </Text>\n    </TouchableOpacity>\n          \n      </View>\n      \n    );\n  }\n}\n\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    header: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#CCFFFF',\n        width : 380,\n        height: 80,\n        padding: 8,\n        marginBottom:80\n        \n    },\n    appButtonContainer: {\n      elevation: 8,\n      backgroundColor: \"#009688\",\n      borderRadius: 10,\n      paddingVertical: 10,\n      paddingHorizontal: 12,\n      \n      \n      justifyContent: 'center',\n      alignItems: 'center',\n      alignContent: 'center'\n    },\n    appButtonText: {\n      fontSize: 28,\n      color: \"#fff\",\n      fontWeight: \"bold\",\n      alignSelf: \"center\",\n      textTransform: \"uppercase\"\n    }\n  });\n\n  export default BudgetScreen;"]},"metadata":{},"sourceType":"module"}