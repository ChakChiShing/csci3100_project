{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport default {\n  animateNextTransition: function animateNextTransition(viewTag, config) {\n    return _regeneratorRuntime.async(function animateNextTransition$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.warn('Reanimated: animateNextTransition is unimplemented on web');\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  configureProps: function configureProps() {\n    return _regeneratorRuntime.async(function configureProps$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.warn('Reanimated: configureProps is unimplemented on web');\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  attachEvent: function attachEvent(viewTag, eventName, nodeID) {\n    return _regeneratorRuntime.async(function attachEvent$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.warn('Reanimated: attachEvent is unimplemented on web');\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  detachEvent: function detachEvent(viewTag, eventName, nodeID) {\n    return _regeneratorRuntime.async(function detachEvent$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            console.warn('Reanimated: detachEvent is unimplemented on web');\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  createNode: function createNode(nodeID, config) {\n    return _regeneratorRuntime.async(function createNode$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            console.warn('Reanimated: createNode is unimplemented on web');\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  dropNode: function dropNode(nodeID) {\n    return _regeneratorRuntime.async(function dropNode$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            console.warn('Reanimated: dropNode is unimplemented on web');\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  connectNodes: function connectNodes(nodeID, childNodeID) {\n    return _regeneratorRuntime.async(function connectNodes$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            console.warn('Reanimated: connectNodes is unimplemented on web');\n\n          case 1:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  disconnectNodes: function disconnectNodes(nodeID, childNodeID) {\n    return _regeneratorRuntime.async(function disconnectNodes$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            console.warn('Reanimated: disconnectNodes is unimplemented on web');\n\n          case 1:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  connectNodeToView: function connectNodeToView(nodeID, nativeViewTag) {\n    return _regeneratorRuntime.async(function connectNodeToView$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            console.warn('Reanimated: connectNodeToView is unimplemented on web');\n\n          case 1:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  disconnectNodeFromView: function disconnectNodeFromView(nodeID, nativeViewTag) {\n    return _regeneratorRuntime.async(function disconnectNodeFromView$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            console.warn('Reanimated: disconnectNodeFromView is unimplemented on web');\n\n          case 1:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getValue: function getValue(nodeID, valueCallback) {\n    return _regeneratorRuntime.async(function getValue$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            console.warn('Reanimated: getValue is unimplemented on web');\n\n          case 1:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};","map":{"version":3,"sources":["/Users/apple/Desktop/M.Hero/project/csci3100_project/node_modules/react-native-reanimated/src/ReanimatedModule.web.js"],"names":["animateNextTransition","viewTag","config","console","warn","configureProps","attachEvent","eventName","nodeID","detachEvent","createNode","dropNode","connectNodes","childNodeID","disconnectNodes","connectNodeToView","nativeViewTag","disconnectNodeFromView","getValue","valueCallback"],"mappings":";AAAA,eAAe;AACPA,EAAAA,qBADO,iCACeC,OADf,EACwBC,MADxB;AAAA;AAAA;AAAA;AAAA;AAEXC,YAAAA,OAAO,CAACC,IAAR,CAAa,2DAAb;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIPC,EAAAA,cAJO;AAAA;AAAA;AAAA;AAAA;AAKXF,YAAAA,OAAO,CAACC,IAAR,CAAa,oDAAb;;AALW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOPE,EAAAA,WAPO,uBAOKL,OAPL,EAOcM,SAPd,EAOyBC,MAPzB;AAAA;AAAA;AAAA;AAAA;AAQXL,YAAAA,OAAO,CAACC,IAAR,CAAa,iDAAb;;AARW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUPK,EAAAA,WAVO,uBAUKR,OAVL,EAUcM,SAVd,EAUyBC,MAVzB;AAAA;AAAA;AAAA;AAAA;AAWXL,YAAAA,OAAO,CAACC,IAAR,CAAa,iDAAb;;AAXW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaPM,EAAAA,UAbO,sBAaIF,MAbJ,EAaYN,MAbZ;AAAA;AAAA;AAAA;AAAA;AAcXC,YAAAA,OAAO,CAACC,IAAR,CAAa,gDAAb;;AAdW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBPO,EAAAA,QAhBO,oBAgBEH,MAhBF;AAAA;AAAA;AAAA;AAAA;AAiBXL,YAAAA,OAAO,CAACC,IAAR,CAAa,8CAAb;;AAjBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBPQ,EAAAA,YAnBO,wBAmBMJ,MAnBN,EAmBcK,WAnBd;AAAA;AAAA;AAAA;AAAA;AAoBXV,YAAAA,OAAO,CAACC,IAAR,CAAa,kDAAb;;AApBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBPU,EAAAA,eAtBO,2BAsBSN,MAtBT,EAsBiBK,WAtBjB;AAAA;AAAA;AAAA;AAAA;AAuBXV,YAAAA,OAAO,CAACC,IAAR,CAAa,qDAAb;;AAvBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBPW,EAAAA,iBAzBO,6BAyBWP,MAzBX,EAyBmBQ,aAzBnB;AAAA;AAAA;AAAA;AAAA;AA0BXb,YAAAA,OAAO,CAACC,IAAR,CAAa,uDAAb;;AA1BW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BPa,EAAAA,sBA5BO,kCA4BgBT,MA5BhB,EA4BwBQ,aA5BxB;AAAA;AAAA;AAAA;AAAA;AA6BXb,YAAAA,OAAO,CAACC,IAAR,CAAa,4DAAb;;AA7BW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+BPc,EAAAA,QA/BO,oBA+BEV,MA/BF,EA+BUW,aA/BV;AAAA;AAAA;AAAA;AAAA;AAgCXhB,YAAAA,OAAO,CAACC,IAAR,CAAa,8CAAb;;AAhCW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf","sourcesContent":["export default {\n  async animateNextTransition(viewTag, config) {\n    console.warn('Reanimated: animateNextTransition is unimplemented on web');\n  },\n  async configureProps(...props) {\n    console.warn('Reanimated: configureProps is unimplemented on web');\n  },\n  async attachEvent(viewTag, eventName, nodeID) {\n    console.warn('Reanimated: attachEvent is unimplemented on web');\n  },\n  async detachEvent(viewTag, eventName, nodeID) {\n    console.warn('Reanimated: detachEvent is unimplemented on web');\n  },\n  async createNode(nodeID, config) {\n    console.warn('Reanimated: createNode is unimplemented on web');\n  },\n  async dropNode(nodeID) {\n    console.warn('Reanimated: dropNode is unimplemented on web');\n  },\n  async connectNodes(nodeID, childNodeID) {\n    console.warn('Reanimated: connectNodes is unimplemented on web');\n  },\n  async disconnectNodes(nodeID, childNodeID) {\n    console.warn('Reanimated: disconnectNodes is unimplemented on web');\n  },\n  async connectNodeToView(nodeID, nativeViewTag) {\n    console.warn('Reanimated: connectNodeToView is unimplemented on web');\n  },\n  async disconnectNodeFromView(nodeID, nativeViewTag) {\n    console.warn('Reanimated: disconnectNodeFromView is unimplemented on web');\n  },\n  async getValue(nodeID, valueCallback) {\n    console.warn('Reanimated: getValue is unimplemented on web');\n  },\n};\n"]},"metadata":{},"sourceType":"module"}