{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/apple/Desktop/M.Hero/project/csci3100_project/node_modules/react-native-currency-picker/src/screens/CurrencyPicker.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { Styles } from \"../styles\";\nimport dataCurrency from \"../constants/CommonCurrency.json\";\nimport { DialogCurrency } from \"../components\";\nimport { CurrencyFlag } from \"../components/CurrencyFlag\";\nexport var CurrencyPicker = function CurrencyPicker(props) {\n  var currencies = Object.values(dataCurrency);\n\n  var _useState = useState(\"US Dollar\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      currencyName = _useState2[0],\n      setCurrencyName = _useState2[1];\n\n  var _useState3 = useState(\"USD\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      code = _useState4[0],\n      setCode = _useState4[1];\n\n  var _useState5 = useState(\"$\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      symbol = _useState6[0],\n      setSymbol = _useState6[1];\n\n  var _useState7 = useState(\"$\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      symbolNative = _useState8[0],\n      setSymbolNative = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      visible = _useState10[0],\n      _setVisible = _useState10[1];\n\n  var onSelectCurrency = props.onSelectCurrency,\n      currencyCode = props.currencyCode,\n      _props$showFlag = props.showFlag,\n      showFlag = _props$showFlag === void 0 ? true : _props$showFlag,\n      _props$showCurrencyNa = props.showCurrencyName,\n      showCurrencyName = _props$showCurrencyNa === void 0 ? true : _props$showCurrencyNa,\n      _props$showSymbol = props.showSymbol,\n      showSymbol = _props$showSymbol === void 0 ? false : _props$showSymbol,\n      _props$showNativeSymb = props.showNativeSymbol,\n      showNativeSymbol = _props$showNativeSymb === void 0 ? true : _props$showNativeSymb,\n      _props$darkMode = props.darkMode,\n      darkMode = _props$darkMode === void 0 ? true : _props$darkMode,\n      renderChildren = props.renderChildren,\n      _props$showCurrencyCo = props.showCurrencyCode,\n      showCurrencyCode = _props$showCurrencyCo === void 0 ? true : _props$showCurrencyCo,\n      currencyPickerRef = props.currencyPickerRef,\n      _props$enable = props.enable,\n      enable = _props$enable === void 0 ? true : _props$enable,\n      onOpen = props.onOpen,\n      onClose = props.onClose,\n      _props$containerStyle = props.containerStyle,\n      containerStyle = _props$containerStyle === void 0 ? {} : _props$containerStyle,\n      _props$modalStyle = props.modalStyle,\n      modalStyle = _props$modalStyle === void 0 ? {} : _props$modalStyle,\n      title = props.title,\n      searchPlaceholder = props.searchPlaceholder,\n      textEmpty = props.textEmpty,\n      _props$showCloseButto = props.showCloseButton,\n      showCloseButton = _props$showCloseButto === void 0 ? true : _props$showCloseButto,\n      _props$showModalTitle = props.showModalTitle,\n      showModalTitle = _props$showModalTitle === void 0 ? true : _props$showModalTitle;\n  var container = containerStyle.container,\n      _containerStyle$flagW = containerStyle.flagWidth,\n      flagWidth = _containerStyle$flagW === void 0 ? 25 : _containerStyle$flagW,\n      currencyCodeStyle = containerStyle.currencyCodeStyle,\n      currencyNameStyle = containerStyle.currencyNameStyle,\n      symbolStyle = containerStyle.symbolStyle,\n      symbolNativeStyle = containerStyle.symbolNativeStyle;\n  useEffect(function () {\n    var currency = undefined;\n    currencyPickerRef && currencyPickerRef(currencyRef);\n\n    if (currencyCode) {\n      currency = currencies.filter(function (item) {\n        return item.code === currencyCode;\n      })[0];\n    }\n\n    if (currency) {\n      var _currency = currency,\n          _code = _currency.code,\n          _symbol = _currency.symbol,\n          symbol_native = _currency.symbol_native,\n          name = _currency.name;\n      setCurrencyName(name);\n      setCode(_code);\n      setSymbol(_symbol);\n      setSymbolNative(symbol_native);\n    }\n  }, [props]);\n  var currencyRef = {\n    open: function open() {\n      _setVisible(true);\n\n      onOpen && onOpen();\n    },\n    close: function close() {\n      _setVisible(false);\n\n      onClose && onClose();\n    }\n  };\n\n  var onSelect = function onSelect(data) {\n    var code = data.code,\n        symbol = data.symbol,\n        symbol_native = data.symbol_native,\n        name = data.name;\n    onSelectCurrency && onSelectCurrency(data);\n    setCurrencyName(name);\n    setCode(code);\n    setSymbol(symbol);\n    setSymbolNative(symbol_native);\n  };\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, enable ? React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      _setVisible(true);\n\n      onOpen && onOpen();\n    },\n    style: [Styles.justifyContent, container],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }\n  }, renderChildren ? renderChildren : React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 52\n    }\n  }, showFlag && React.createElement(CurrencyFlag, {\n    currency: code,\n    width: flagWidth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 34\n    }\n  }), showCurrencyCode && React.createElement(Text, {\n    style: [styles.txtCurrencyCode, currencyCodeStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 42\n    }\n  }, code), showCurrencyName && React.createElement(Text, {\n    style: [styles.txtCountryName, currencyNameStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 42\n    }\n  }, currencyName), showSymbol && React.createElement(Text, {\n    style: [styles.txtCountryName, symbolStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 36\n    }\n  }, symbol), showNativeSymbol && React.createElement(Text, {\n    style: [styles.txtCountryName, symbolNativeStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 42\n    }\n  }, symbolNative))) : null, React.createElement(Modal, {\n    visible: visible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, React.createElement(DialogCurrency, {\n    onSelectItem: function onSelectItem(data) {\n      onSelect(data);\n    },\n    setVisible: function setVisible(value) {\n      _setVisible(value);\n\n      onClose && onClose();\n    },\n    title: title,\n    searchPlaceholder: searchPlaceholder,\n    textEmpty: textEmpty,\n    darkMode: darkMode,\n    modalStyle: modalStyle,\n    showCloseButton: showCloseButton,\n    showModalTitle: showModalTitle,\n    showCurrencySymbol: showSymbol,\n    showCurrencyNativeSymbol: showNativeSymbol,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  })));\n};\nvar styles = StyleSheet.create({\n  txtCountryName: _objectSpread(_objectSpread({}, Styles.fontDefault), {}, {\n    marginLeft: 10\n  }),\n  txtCurrencyCode: _objectSpread(_objectSpread({}, Styles.fontDefault), {}, {\n    marginLeft: 10,\n    fontWeight: \"600\"\n  })\n});","map":{"version":3,"sources":["/Users/apple/Desktop/M.Hero/project/csci3100_project/node_modules/react-native-currency-picker/src/screens/CurrencyPicker.js"],"names":["React","useState","useEffect","Styles","dataCurrency","DialogCurrency","CurrencyFlag","CurrencyPicker","props","currencies","Object","values","currencyName","setCurrencyName","code","setCode","symbol","setSymbol","symbolNative","setSymbolNative","visible","setVisible","onSelectCurrency","currencyCode","showFlag","showCurrencyName","showSymbol","showNativeSymbol","darkMode","renderChildren","showCurrencyCode","currencyPickerRef","enable","onOpen","onClose","containerStyle","modalStyle","title","searchPlaceholder","textEmpty","showCloseButton","showModalTitle","container","flagWidth","currencyCodeStyle","currencyNameStyle","symbolStyle","symbolNativeStyle","currency","undefined","currencyRef","filter","item","symbol_native","name","open","close","onSelect","data","justifyContent","flexDirection","styles","txtCurrencyCode","txtCountryName","value","StyleSheet","create","fontDefault","marginLeft","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, TouchableOpacity, Text, Modal } from 'react-native';\nimport { Styles } from '../styles';\nimport dataCurrency from \"../constants/CommonCurrency.json\";\nimport { DialogCurrency } from '../components';\nimport { CurrencyFlag } from \"../components/CurrencyFlag\";\n\nexport const CurrencyPicker = (props) => {\n\n    const currencies = Object.values(dataCurrency);\n\n    const [currencyName, setCurrencyName] = useState(\"US Dollar\");\n    const [code, setCode] = useState(\"USD\");\n    const [symbol, setSymbol] = useState(\"$\");\n    const [symbolNative, setSymbolNative] = useState(\"$\");\n    const [visible, setVisible] = useState(false);\n\n    const {\n        onSelectCurrency,\n        currencyCode,\n        showFlag = true,\n        showCurrencyName = true,\n        showSymbol = false,\n        showNativeSymbol = true,\n        darkMode = true,\n        renderChildren,\n        showCurrencyCode = true,\n\n        currencyPickerRef,\n        enable = true,\n        onOpen,\n        onClose,\n\n        containerStyle = {},\n        modalStyle = {},\n\n        title,\n        searchPlaceholder,\n        textEmpty,\n        showCloseButton = true,\n        showModalTitle = true,\n    } = props;\n\n    const { container, flagWidth = 25, currencyCodeStyle, currencyNameStyle, symbolStyle, symbolNativeStyle } = containerStyle;\n\n    useEffect(() => {\n        let currency = undefined;\n        currencyPickerRef && currencyPickerRef(currencyRef);\n\n        if (currencyCode) {\n            currency = currencies.filter(item => item.code === currencyCode)[0];\n        }\n\n        if (currency) {\n            const { code, symbol, symbol_native, name } = currency;\n            setCurrencyName(name);\n            setCode(code);\n            setSymbol(symbol);\n            setSymbolNative(symbol_native);\n        }\n    }, [props]);\n\n    const currencyRef = {\n        open: () => {\n            setVisible(true);\n            onOpen && onOpen();\n        },\n        close: () => {\n            setVisible(false);\n            onClose && onClose();\n        }\n    }\n\n    const onSelect = (data) => {\n        const { code, symbol, symbol_native, name } = data;\n        onSelectCurrency && onSelectCurrency(data);\n        setCurrencyName(name);\n        setCode(code);\n        setSymbol(symbol);\n        setSymbolNative(symbol_native);\n    }\n\n    return (\n        <View>\n            {enable ? <TouchableOpacity\n                onPress={() => { setVisible(true); onOpen && onOpen() }}\n                style={[Styles.justifyContent, container]}\n            >\n                {renderChildren ? renderChildren : <View style={{ flexDirection: \"row\" }}>\n                    {showFlag && <CurrencyFlag currency={code} width={flagWidth} />}\n                    {showCurrencyCode && <Text style={[styles.txtCurrencyCode, currencyCodeStyle]}>{code}</Text>}\n                    {showCurrencyName && <Text style={[styles.txtCountryName, currencyNameStyle]}>{currencyName}</Text>}\n                    {showSymbol && <Text style={[styles.txtCountryName, symbolStyle]}>{symbol}</Text>}\n                    {showNativeSymbol && <Text style={[styles.txtCountryName, symbolNativeStyle]}>{symbolNative}</Text>}\n                </View>}\n            </TouchableOpacity> : null}\n            <Modal\n                visible={visible}\n            >\n                <DialogCurrency\n                    onSelectItem={(data) => { onSelect(data) }}\n                    setVisible={(value) => { setVisible(value); onClose && onClose(); }}\n                    title={title}\n                    searchPlaceholder={searchPlaceholder}\n                    textEmpty={textEmpty}\n                    darkMode={darkMode}\n                    modalStyle={modalStyle}\n                    showCloseButton={showCloseButton}\n                    showModalTitle={showModalTitle}\n                    showCurrencySymbol={showSymbol}\n                    showCurrencyNativeSymbol={showNativeSymbol}\n                />\n            </Modal>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    txtCountryName: {\n        ...Styles.fontDefault,\n        marginLeft: 10\n    },\n    txtCurrencyCode: {\n        ...Styles.fontDefault,\n        marginLeft: 10,\n        fontWeight: \"600\"\n    }\n});\n"]},"metadata":{},"sourceType":"module"}