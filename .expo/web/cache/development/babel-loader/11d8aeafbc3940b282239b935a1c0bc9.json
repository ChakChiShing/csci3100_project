{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/apple/Desktop/M.Hero/project/csci3100_project/component/FriendScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport 'react-native-gesture-handler';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport Icon from \"@expo/vector-icons/Ionicons\";\n\nvar FriendScreen = function (_React$Component) {\n  _inherits(FriendScreen, _React$Component);\n\n  var _super = _createSuper(FriendScreen);\n\n  function FriendScreen() {\n    _classCallCheck(this, FriendScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FriendScreen, [{\n    key: \"render\",\n    value: function render() {\n      var Tab = createMaterialTopTabNavigator();\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"FriendList\",\n        tabBarOptions: {\n          labelStyle: {\n            fontSize: 12\n          },\n          tabStyle: {\n            width: 100\n          },\n          style: {\n            backgroundColor: 'powderblue'\n          },\n          showIcon: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 7\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Friend List\",\n        component: FriendList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Suggestions\",\n        component: Suggestions,\n        options: {\n          tabBarLabel: 'Friend suggestions',\n          tabBarIcon: function tabBarIcon(_ref) {\n            var tintColor = _ref.tintColor;\n            return React.createElement(Icon, {\n              name: \"person-add-outline\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 13\n              }\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return FriendScreen;\n}(React.Component);\n\nfunction Suggestions() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"suggestion list\"));\n}\n\nfunction FriendList() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"friend!\"));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default FriendScreen;","map":{"version":3,"sources":["/Users/apple/Desktop/M.Hero/project/csci3100_project/component/FriendScreen.js"],"names":["React","Component","createMaterialTopTabNavigator","Icon","FriendScreen","Tab","labelStyle","fontSize","tabStyle","width","style","backgroundColor","showIcon","FriendList","Suggestions","tabBarLabel","tabBarIcon","tintColor","flex","justifyContent","alignItems","styles","StyleSheet","create","container"],"mappings":";;;;;;;;;;;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,SAASC,6BAAT,QAA8C,qCAA9C;AACA,OAAOC,IAAP;;IAEMC,Y;;;;;;;;;;;;;WACJ,kBAAQ;AACN,UAAMC,GAAG,GAAGH,6BAA6B,EAAzC;AACA,aAIE,oBAAC,GAAD,CAAK,SAAL;AACA,QAAA,gBAAgB,EAAC,YADjB;AAEA,QAAA,aAAa,EAAE;AACbI,UAAAA,UAAU,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WADC;AAEbC,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAFG;AAGbC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAE;AAAnB,WAHM;AAIbC,UAAAA,QAAQ,EAAE;AAJG,SAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUA,oBAAC,GAAD,CAAK,MAAL;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,SAAS,EAAEC,UAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVA,EAqBA,oBAAC,GAAD,CAAK,MAAL;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,SAAS,EAAEC,WAFb;AAGE,QAAA,OAAO,EACL;AAAEC,UAAAA,WAAW,EAAE,oBAAf;AACEC,UAAAA,UAAU,EAAE;AAAA,gBAAEC,SAAF,QAAEA,SAAF;AAAA,mBACZ,oBAAC,IAAD;AAAM,cAAA,IAAI,EAAC,oBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADY;AAAA;AADd,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBA,CAJF;AAsCD;;;;EAzCwBjB,KAAK,CAACC,S;;AA6CjC,SAASa,WAAT,GAAwB;AAEpB,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEI,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE,QAA3B;AAAqCC,MAAAA,UAAU,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,CADF;AAMH;;AACD,SAASP,UAAT,GAAsB;AAElB,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEK,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE,QAA3B;AAAqCC,MAAAA,UAAU,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,CADF;AAKH;;AAGC,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTN,IAAAA,IAAI,EAAE,CADG;AAETP,IAAAA,eAAe,EAAE,MAFR;AAGTS,IAAAA,UAAU,EAAE,QAHH;AAITD,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf;AASA,eAAef,YAAf","sourcesContent":["import 'react-native-gesture-handler';\nimport React, { Component } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport Icon from 'react-native-vector-icons/Ionicons';\n\nclass FriendScreen extends React.Component {\n  render(){\n    const Tab = createMaterialTopTabNavigator();\n    return (\n      // <View style ={{flex: 1, justifyContent:'center', alignItems:'center'}}>\n      //   <Text>try</Text>\n      // </View>\n      <Tab.Navigator\n      initialRouteName='FriendList'\n      tabBarOptions={{\n        labelStyle: { fontSize: 12 },\n        tabStyle: { width: 100 },\n        style: { backgroundColor: 'powderblue' },\n        showIcon: true,\n      }}\n    >\n      \n      <Tab.Screen \n        name=\"Friend List\" \n        component={FriendList}\n        // options={\n        //   { tabBarLabel: 'Your Friends' ,\n        //    tabBarIcon: ({tintColor})=>(  \n        //     <Icon name=\"people-outline\"></Icon>\n        //    ),\n        //   }}\n      />\n\n      <Tab.Screen\n        name=\"Suggestions\"\n        component={Suggestions}\n        options={\n          { tabBarLabel: 'Friend suggestions' ,\n            tabBarIcon: ({tintColor})=>(  \n            <Icon name=\"person-add-outline\"></Icon>\n           ),\n          }}\n      />\n\n    </Tab.Navigator>\n    );\n  }\n}\n\n\nfunction Suggestions () {\n\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>suggestion list</Text>\n      </View>\n    );\n  \n}\nfunction FriendList() {\n\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>friend!</Text>\n      </View>\n    );\n}\n\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  });\n\n  export default FriendScreen;"]},"metadata":{},"sourceType":"module"}