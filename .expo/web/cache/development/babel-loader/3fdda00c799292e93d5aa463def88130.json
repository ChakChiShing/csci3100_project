{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport AnimatedNode from \"./AnimatedNode\";\nimport { val } from \"../val\";\nimport ReanimatedModule from \"../ReanimatedModule\";\n\nfunction sanitizeValue(value) {\n  return value === null || value === undefined || typeof value === 'string' ? value : Number(value);\n}\n\nvar InternalAnimatedValue = function (_AnimatedNode) {\n  _inherits(InternalAnimatedValue, _AnimatedNode);\n\n  var _super = _createSuper(InternalAnimatedValue);\n\n  function InternalAnimatedValue(value) {\n    var _this;\n\n    _classCallCheck(this, InternalAnimatedValue);\n\n    _this = _super.call(this, {\n      type: 'value',\n      value: sanitizeValue(value)\n    });\n    _this._startingValue = _this._value = value;\n    _this._animation = null;\n    return _this;\n  }\n\n  _createClass(InternalAnimatedValue, [{\n    key: \"__detach\",\n    value: function __detach() {\n      var _this2 = this;\n\n      ReanimatedModule.getValue(this.__nodeID, function (val) {\n        return _this2.__nodeConfig.value = val;\n      });\n\n      this.__detachAnimation(this._animation);\n\n      _get(_getPrototypeOf(InternalAnimatedValue.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"__detachAnimation\",\n    value: function __detachAnimation(animation) {\n      animation && animation.__detach();\n\n      if (this._animation === animation) {\n        this._animation = null;\n      }\n    }\n  }, {\n    key: \"__attachAnimation\",\n    value: function __attachAnimation(animation) {\n      this.__detachAnimation(this._animation);\n\n      this._animation = animation;\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      if (this.__inputNodes && this.__inputNodes.length) {\n        this.__inputNodes.forEach(val);\n      }\n\n      return this._value + this._offset;\n    }\n  }, {\n    key: \"_updateValue\",\n    value: function _updateValue(value) {\n      this._value = value;\n\n      this.__forceUpdateCache(value);\n    }\n  }]);\n\n  return InternalAnimatedValue;\n}(AnimatedNode);\n\nexport { InternalAnimatedValue as default };","map":{"version":3,"sources":["/Users/apple/Desktop/M.Hero/project/csci3100_project/node_modules/react-native-reanimated/src/core/InternalAnimatedValue.js"],"names":["AnimatedNode","val","ReanimatedModule","sanitizeValue","value","undefined","Number","InternalAnimatedValue","type","_startingValue","_value","_animation","getValue","__nodeID","__nodeConfig","__detachAnimation","animation","__detach","__inputNodes","length","forEach","_offset","__forceUpdateCache"],"mappings":";;;;;;;;;;;AAAA,OAAOA,YAAP;AACA,SAASC,GAAT;AACA,OAAOC,gBAAP;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,SAAOA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKC,SAA5B,IAAyC,OAAOD,KAAP,KAAiB,QAA1D,GACHA,KADG,GAEHE,MAAM,CAACF,KAAD,CAFV;AAGD;;IAMoBG,qB;;;;;AACnB,iCAAYH,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAM;AAAEI,MAAAA,IAAI,EAAE,OAAR;AAAiBJ,MAAAA,KAAK,EAAED,aAAa,CAACC,KAAD;AAArC,KAAN;AACA,UAAKK,cAAL,GAAsB,MAAKC,MAAL,GAAcN,KAApC;AACA,UAAKO,UAAL,GAAkB,IAAlB;AAHiB;AAIlB;;;;WAED,oBAAW;AAAA;;AACTT,MAAAA,gBAAgB,CAACU,QAAjB,CACE,KAAKC,QADP,EAEE,UAAAZ,GAAG;AAAA,eAAK,MAAI,CAACa,YAAL,CAAkBV,KAAlB,GAA0BH,GAA/B;AAAA,OAFL;;AAIA,WAAKc,iBAAL,CAAuB,KAAKJ,UAA5B;;AACA;AACD;;;WAED,2BAAkBK,SAAlB,EAA6B;AAC3BA,MAAAA,SAAS,IAAIA,SAAS,CAACC,QAAV,EAAb;;AACA,UAAI,KAAKN,UAAL,KAAoBK,SAAxB,EAAmC;AACjC,aAAKL,UAAL,GAAkB,IAAlB;AACD;AACF;;;WAED,2BAAkBK,SAAlB,EAA6B;AAC3B,WAAKD,iBAAL,CAAuB,KAAKJ,UAA5B;;AACA,WAAKA,UAAL,GAAkBK,SAAlB;AACD;;;WAED,wBAAe;AACb,UAAI,KAAKE,YAAL,IAAqB,KAAKA,YAAL,CAAkBC,MAA3C,EAAmD;AACjD,aAAKD,YAAL,CAAkBE,OAAlB,CAA0BnB,GAA1B;AACD;;AACD,aAAO,KAAKS,MAAL,GAAc,KAAKW,OAA1B;AACD;;;WAED,sBAAajB,KAAb,EAAoB;AAClB,WAAKM,MAAL,GAAcN,KAAd;;AACA,WAAKkB,kBAAL,CAAwBlB,KAAxB;AACD;;;;EAtCgDJ,Y;;SAA9BO,qB","sourcesContent":["import AnimatedNode from './AnimatedNode';\nimport { val } from '../val';\nimport ReanimatedModule from '../ReanimatedModule';\n\nfunction sanitizeValue(value) {\n  return value === null || value === undefined || typeof value === 'string'\n    ? value\n    : Number(value);\n}\n\n/**\n * This class has been made internal in order to omit dependencies' cycles which\n * were caused by imperative setValue and interpolate â€“ they are currently exposed with AnimatedValue.js\n */\nexport default class InternalAnimatedValue extends AnimatedNode {\n  constructor(value) {\n    super({ type: 'value', value: sanitizeValue(value) });\n    this._startingValue = this._value = value;\n    this._animation = null;\n  }\n\n  __detach() {\n    ReanimatedModule.getValue(\n      this.__nodeID,\n      val => (this.__nodeConfig.value = val)\n    );\n    this.__detachAnimation(this._animation);\n    super.__detach();\n  }\n\n  __detachAnimation(animation) {\n    animation && animation.__detach();\n    if (this._animation === animation) {\n      this._animation = null;\n    }\n  }\n\n  __attachAnimation(animation) {\n    this.__detachAnimation(this._animation);\n    this._animation = animation;\n  }\n\n  __onEvaluate() {\n    if (this.__inputNodes && this.__inputNodes.length) {\n      this.__inputNodes.forEach(val);\n    }\n    return this._value + this._offset;\n  }\n\n  _updateValue(value) {\n    this._value = value;\n    this.__forceUpdateCache(value);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}