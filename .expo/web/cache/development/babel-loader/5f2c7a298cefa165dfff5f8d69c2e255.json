{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/apple/Desktop/M.Hero/project/csci3100_project/node_modules/react-native-currency-picker/src/components/DialogCurrency.js\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Fuse from 'fuse.js';\nimport { Colors } from \"../styles\";\nimport data from \"../constants/CommonCurrency.json\";\nimport { getStyles } from \"./styles\";\nimport { CurrencyFlag } from \"./CurrencyFlag\";\nexport var DialogCurrency = function DialogCurrency(props) {\n  var currencies = Object.values(data);\n  var onSelectItem = props.onSelectItem,\n      _props$title = props.title,\n      title = _props$title === void 0 ? \"Currency\" : _props$title,\n      _props$searchPlacehol = props.searchPlaceholder,\n      searchPlaceholder = _props$searchPlacehol === void 0 ? \"Search\" : _props$searchPlacehol,\n      _props$textEmpty = props.textEmpty,\n      textEmpty = _props$textEmpty === void 0 ? \"Empty data\" : _props$textEmpty,\n      setVisible = props.setVisible,\n      _props$darkMode = props.darkMode,\n      darkMode = _props$darkMode === void 0 ? true : _props$darkMode,\n      modalStyle = props.modalStyle,\n      _props$showCloseButto = props.showCloseButton,\n      showCloseButton = _props$showCloseButto === void 0 ? true : _props$showCloseButto,\n      _props$showModalTitle = props.showModalTitle,\n      showModalTitle = _props$showModalTitle === void 0 ? true : _props$showModalTitle,\n      _props$showCurrencySy = props.showCurrencySymbol,\n      showCurrencySymbol = _props$showCurrencySy === void 0 ? false : _props$showCurrencySy,\n      _props$showCurrencyNa = props.showCurrencyNativeSymbol,\n      showCurrencyNativeSymbol = _props$showCurrencyNa === void 0 ? true : _props$showCurrencyNa;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState(currencies),\n      _useState4 = _slicedToArray(_useState3, 2),\n      listCurrency = _useState4[0],\n      setListCurrency = _useState4[1];\n\n  var _modalStyle$itemStyle = modalStyle.itemStyle,\n      itemStyle = _modalStyle$itemStyle === void 0 ? {} : _modalStyle$itemStyle,\n      container = modalStyle.container,\n      searchStyle = modalStyle.searchStyle,\n      tileStyle = modalStyle.tileStyle;\n  var itemContainer = itemStyle.itemContainer,\n      _itemStyle$flagWidth = itemStyle.flagWidth,\n      flagWidth = _itemStyle$flagWidth === void 0 ? 25 : _itemStyle$flagWidth,\n      currencyCodeStyle = itemStyle.currencyCodeStyle,\n      currencyNameStyle = itemStyle.currencyNameStyle,\n      symbolStyle = itemStyle.symbolStyle,\n      symbolNativeStyle = itemStyle.symbolNativeStyle;\n  useEffect(function () {\n    StatusBar.setHidden(true);\n    return function () {\n      setSearch(\"\");\n    };\n  }, []);\n  var styles = getStyles(darkMode);\n\n  var options = _extends({\n    shouldSort: true,\n    threshold: 0.6,\n    location: 0,\n    distance: 100,\n    maxPatternLength: 32,\n    minMatchCharLength: 1,\n    keys: ['name', 'code'],\n    id: 'id'\n  });\n\n  var fuse = new Fuse(currencies.reduce(function (acc, item) {\n    return [].concat(_toConsumableArray(acc), [{\n      id: item.code,\n      name: item.name,\n      code: item.code\n    }]);\n  }, []), options);\n\n  var onSelect = function onSelect(item) {\n    setSearch(\"\");\n    handleFilterChange(\"\");\n    StatusBar.setHidden(false);\n    if (onSelectItem) onSelectItem(item);\n    setVisible(false);\n  };\n\n  var renderItemTemplate = function renderItemTemplate(_ref) {\n    var code = _ref.code,\n        symbol = _ref.symbol,\n        symbol_native = _ref.symbol_native,\n        name = _ref.name;\n    var showSymbol = showCurrencySymbol || showCurrencyNativeSymbol;\n    return React.createElement(View, {\n      style: [styles.item, itemContainer],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, React.createElement(CurrencyFlag, {\n      currency: code,\n      width: flagWidth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: [styles.currencyName, currencyCodeStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, code), React.createElement(Text, {\n      style: [styles.commonName, showSymbol && {\n        width: 120\n      }, currencyNameStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, name), showCurrencySymbol && React.createElement(Text, {\n      style: [styles.commonSymbolCode, symbolStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 40\n      }\n    }, symbol), showCurrencyNativeSymbol && React.createElement(Text, {\n      style: [styles.commonSymbolCode, symbolNativeStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 46\n      }\n    }, symbol_native));\n  };\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item,\n        index = _ref2.index;\n    var isLastItem = listCurrency.length - 1 === index;\n    return React.createElement(TouchableOpacity, {\n      style: {\n        marginBottom: isLastItem ? 150 : 0\n      },\n      onPress: function onPress() {\n        return onSelect(item);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 16\n      }\n    }, renderItemTemplate(item));\n  };\n\n  var _flatList = undefined;\n\n  var handleFilterChange = function handleFilterChange(value) {\n    setSearch(value);\n    var listDataFilter = [];\n\n    if (value === \"\") {\n      listDataFilter = currencies;\n    } else {\n      var filteredCountries = fuse.search(value);\n      if (_flatList) _flatList.scrollToOffset({\n        offset: 0\n      });\n      filteredCountries.forEach(function (n) {\n        var item = currencies.filter(function (i) {\n          return i.code === n.item.code.toString();\n        });\n        if (item.length > 0) listDataFilter.push(item[0]);\n      });\n    }\n\n    setListCurrency(listDataFilter);\n  };\n\n  return React.createElement(View, {\n    style: [styles.container, container],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, showModalTitle && React.createElement(Text, {\n    style: [styles.titleModal, tileStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 36\n    }\n  }, title), showCloseButton && React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setVisible(false);\n      setSearch(\"\");\n      handleFilterChange(\"\");\n      StatusBar.setHidden(false);\n    },\n    style: styles.searchClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: styles.btnClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, \"X\"))), React.createElement(View, {\n    style: styles.search,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: [styles.textInputContainer, searchStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    autoFocus: true,\n    onChangeText: function onChangeText(text) {\n      return handleFilterChange(text);\n    },\n    value: search,\n    placeholder: searchPlaceholder,\n    placeholderTextColor: Colors.textFieldColor,\n    style: [styles.textTitleSmallerWhite, styles.textInput],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }))), React.createElement(View, {\n    style: styles.listContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    keyboardShouldPersistTaps: 'handled',\n    ref: function ref(_ref3) {\n      return _flatList = _ref3;\n    },\n    data: listCurrency,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.code;\n    },\n    ListEmptyComponent: function ListEmptyComponent() {\n      return React.createElement(View, {\n        style: styles.listNullContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 47\n        }\n      }, React.createElement(Text, {\n        style: styles.txtEmpty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }\n      }, textEmpty));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/apple/Desktop/M.Hero/project/csci3100_project/node_modules/react-native-currency-picker/src/components/DialogCurrency.js"],"names":["React","useEffect","useState","Fuse","Colors","data","getStyles","CurrencyFlag","DialogCurrency","props","currencies","Object","values","onSelectItem","title","searchPlaceholder","textEmpty","setVisible","darkMode","modalStyle","showCloseButton","showModalTitle","showCurrencySymbol","showCurrencyNativeSymbol","search","setSearch","listCurrency","setListCurrency","itemStyle","container","searchStyle","tileStyle","itemContainer","flagWidth","currencyCodeStyle","currencyNameStyle","symbolStyle","symbolNativeStyle","StatusBar","setHidden","styles","options","shouldSort","threshold","location","distance","maxPatternLength","minMatchCharLength","keys","id","fuse","reduce","acc","item","code","name","onSelect","handleFilterChange","renderItemTemplate","symbol","symbol_native","showSymbol","currencyName","commonName","width","commonSymbolCode","renderItem","index","isLastItem","length","marginBottom","_flatList","undefined","value","listDataFilter","filteredCountries","scrollToOffset","offset","forEach","n","filter","i","toString","push","header","titleModal","searchClose","btnClose","textInputContainer","text","textFieldColor","textTitleSmallerWhite","textInput","listContainer","ref","listNullContainer","txtEmpty"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n    View,\n    TouchableOpacity,\n    StatusBar,\n    FlatList,\n    TextInput,\n    Text\n} from 'react-native';\nimport Fuse from 'fuse.js'\nimport { Colors } from \"../styles\";\nimport data from \"../constants/CommonCurrency.json\"\nimport { getStyles } from \"./styles\"\nimport { CurrencyFlag } from \"./CurrencyFlag\";\n\nexport const DialogCurrency = (props) => {\n\n    const currencies = Object.values(data);\n\n    const {\n        onSelectItem,\n        title = \"Currency\",\n        searchPlaceholder = \"Search\",\n        textEmpty = \"Empty data\",\n        setVisible,\n        darkMode = true,\n        modalStyle,\n        showCloseButton = true,\n        showModalTitle = true,\n        showCurrencySymbol = false,\n        showCurrencyNativeSymbol = true\n    } = props;\n\n    const [search, setSearch] = useState(\"\");\n    const [listCurrency, setListCurrency] = useState(currencies);\n\n    const { itemStyle = {}, container, searchStyle, tileStyle } = modalStyle;\n\n    const { itemContainer, flagWidth = 25, currencyCodeStyle, currencyNameStyle, symbolStyle, symbolNativeStyle } = itemStyle;\n\n    useEffect(() => {\n        StatusBar.setHidden(true);\n        return () => {\n            setSearch(\"\");\n        };\n    }, []);\n\n    const styles = getStyles(darkMode);\n\n    const options = Object.assign({\n        shouldSort: true,\n        threshold: 0.6,\n        location: 0,\n        distance: 100,\n        maxPatternLength: 32,\n        minMatchCharLength: 1,\n        keys: ['name', 'code'],\n        id: 'id'\n    });\n\n    const fuse = new Fuse(\n        currencies.reduce(\n            (acc, item) => [\n                ...acc,\n                { id: item.code, name: item.name, code: item.code }\n            ],\n            []\n        ),\n        options\n    );\n\n    const onSelect = (item) => {\n        setSearch(\"\");\n        handleFilterChange(\"\");\n        StatusBar.setHidden(false);\n        if (onSelectItem) onSelectItem(item);\n        setVisible(false)\n    }\n\n    const renderItemTemplate = ({ code, symbol, symbol_native, name }) => {\n\n        const showSymbol = showCurrencySymbol || showCurrencyNativeSymbol;\n\n        return (\n            <View style={[styles.item, itemContainer]}>\n                <CurrencyFlag currency={code} width={flagWidth} />\n                <Text style={[styles.currencyName, currencyCodeStyle]}>{code}</Text>\n                <Text style={[styles.commonName, showSymbol && { width: 120 }, currencyNameStyle]}>{name}</Text>\n                {showCurrencySymbol && <Text style={[styles.commonSymbolCode, symbolStyle]}>{symbol}</Text>}\n                {showCurrencyNativeSymbol && <Text style={[styles.commonSymbolCode, symbolNativeStyle]}>{symbol_native}</Text>}\n            </View>\n        );\n    }\n\n    const renderItem = ({ item, index }) => {\n        const isLastItem = listCurrency.length - 1 === index;\n        return <TouchableOpacity style={{ marginBottom: isLastItem ? 150 : 0 }} onPress={() => onSelect(item)}>\n            {renderItemTemplate(item)}\n        </TouchableOpacity>\n    }\n\n    let _flatList = undefined;\n\n    const handleFilterChange = (value) => {\n        setSearch(value);\n\n        let listDataFilter = [];\n        if (value === \"\") {\n            listDataFilter = currencies;\n        } else {\n            const filteredCountries = fuse.search(value)\n            if (_flatList) _flatList.scrollToOffset({ offset: 0 });\n            filteredCountries.forEach(n => {\n                const item = currencies.filter(i => i.code === n.item.code.toString());\n                if (item.length > 0) listDataFilter.push(item[0])\n\n            })\n        }\n        setListCurrency(listDataFilter);\n    }\n\n    return (\n        <View style={[styles.container, container]}>\n            <View style={styles.header}>\n                {showModalTitle && <Text style={[styles.titleModal, tileStyle]}>{title}</Text>}\n                {showCloseButton && <TouchableOpacity\n                    onPress={() => {\n                        setVisible(false);\n                        setSearch(\"\");\n                        handleFilterChange(\"\");\n                        StatusBar.setHidden(false);\n                    }}\n                    style={styles.searchClose}>\n                    <Text style={styles.btnClose}>X</Text>\n                </TouchableOpacity>}\n            </View>\n            <View style={styles.search}>\n                <View style={[styles.textInputContainer, searchStyle]}>\n                    <TextInput\n                        autoFocus\n                        onChangeText={(text) => handleFilterChange(text)}\n                        value={search}\n                        placeholder={searchPlaceholder}\n                        placeholderTextColor={Colors.textFieldColor}\n                        style={[styles.textTitleSmallerWhite, styles.textInput]}\n                    />\n                </View>\n            </View>\n            <View style={styles.listContainer}>\n                <FlatList\n                    keyboardShouldPersistTaps={'handled'}\n                    ref={(ref) => _flatList = ref}\n                    data={listCurrency}\n                    renderItem={renderItem}\n                    keyExtractor={item => item.code}\n                    ListEmptyComponent={() => <View style={styles.listNullContainer}>\n                        <Text style={styles.txtEmpty}>{textEmpty}</Text>\n                    </View>} />\n            </View>\n        </View>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}