{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/apple/Desktop/M.Hero/project/csci3100_project/component/SettingScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport 'react-native-gesture-handler';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport BudgetScreen from \"./BudgetScreen.js\";\nimport CurrencyScreen from \"./CurrencyScreen.js\";\nimport CategoryScreen from \"./CategoryScreen.js\";\n\nfunction handlePress() {\n  console.log('Pressed!');\n}\n\nfunction Set() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      flexdirection: 'column',\n      justifyContent: 'top'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.words,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Budget\"), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"2000\",\n    onPress: function onPress() {\n      return navigation.navigate('BudgetScreen');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }))), React.createElement(View, {\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.words,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Currency\"), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"HKD$\",\n    onPress: function onPress() {\n      return navigation.navigate('Currency');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }))), React.createElement(View, {\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.words,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Category\")));\n}\n\nvar SettingScreen = function (_React$Component) {\n  _inherits(SettingScreen, _React$Component);\n\n  var _super = _createSuper(SettingScreen);\n\n  function SettingScreen() {\n    _classCallCheck(this, SettingScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SettingScreen, [{\n    key: \"render\",\n    value: function render() {\n      var Stack = createStackNavigator();\n      return React.createElement(Stack.Navigator, {\n        initialRouteName: \"Set\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Set\",\n        component: Set,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"BudgetScreen\",\n        component: BudgetScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"CurrencyScreen\",\n        component: CurrencyScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"CategoryScreen\",\n        component: CategoryScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return SettingScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 5,\n    backgroundColor: '#66b2ff',\n    height: 80\n  },\n  words: {\n    fontSize: 20\n  }\n});\nexport default SettingScreen;","map":{"version":3,"sources":["/Users/apple/Desktop/M.Hero/project/csci3100_project/component/SettingScreen.js"],"names":["React","Component","NavigationContainer","createStackNavigator","BudgetScreen","CurrencyScreen","CategoryScreen","handlePress","console","log","Set","flex","flexdirection","justifyContent","styles","label","words","navigation","navigate","SettingScreen","Stack","StyleSheet","create","container","backgroundColor","alignItems","marginBottom","height","fontSize"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\nimport React, { Component } from 'react';\nimport { StyleSheet, Text, View, Button, SafeAreaView } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport BudgetScreen from \"./BudgetScreen.js\";\nimport CurrencyScreen from \"./CurrencyScreen.js\";\nimport CategoryScreen from \"./CategoryScreen.js\";\n\nfunction handlePress() {\n  console.log('Pressed!');\n}\n\nfunction Set() {\n  return (\n    \n    <View style={{ flex: 1, flexdirection:'column', justifyContent: 'top' }}>\n      \n      <View style = {styles.label}>\n        <Text style={styles.words}>Budget</Text>\n\n        <View>\n      <Button\n        title=\"2000\"\n        onPress={() => navigation.navigate('BudgetScreen')}\n      />\n      </View>\n      </View>\n      \n      \n        \n        \n      \n      <View style = {styles.label}>\n        <Text style={styles.words}>Currency</Text>\n        <View>\n        <Button\n        title=\"HKD$\"\n        onPress={() => navigation.navigate('Currency')}\n      />\n        </View>\n      </View>\n      <View style = {styles.label}>\n        <Text style={styles.words}>Category</Text>\n      </View>\n    </View>\n  );\n}\n\nclass SettingScreen extends React.Component {\n    render(){\n\n      const Stack = createStackNavigator();\n      return (\n        <Stack.Navigator initialRouteName=\"Set\">\n          <Stack.Screen name=\"Set\" component={Set} />\n        <Stack.Screen name=\"BudgetScreen\" component={BudgetScreen} />\n        <Stack.Screen name=\"CurrencyScreen\" component={CurrencyScreen} />\n        <Stack.Screen name=\"CategoryScreen\" component={CategoryScreen} />\n        </Stack.Navigator>\n      );\n    }\n  }\n  \n  \n    const styles = StyleSheet.create({\n      container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n      \n      label: {\n        alignItems:'center', \n        justifyContent:'center',\n        marginBottom: 5,\n        backgroundColor: '#66b2ff',\n        height: 80,\n      },\n\n      words: {\n        fontSize: 20,\n      }\n     \n    });\n  \n    export default SettingScreen;"]},"metadata":{},"sourceType":"module"}