{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/apple/Desktop/M.Hero/project/csci3100_project/node_modules/react-native-auto-height-image/AutoHeightImage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport ImagePolyfill from \"./ImagePolyfill\";\nimport AnimatableImage from \"./AnimatableImage\";\nimport PropTypes from 'prop-types';\nimport { getImageSizeFitWidth, getImageSizeFitWidthFromCache } from \"./cache\";\nimport { NOOP, DEFAULT_HEIGHT } from \"./helpers\";\n\nvar _AnimatableImage$prop = AnimatableImage.propTypes,\n    resizeMode = _AnimatableImage$prop.resizeMode,\n    ImagePropTypes = _objectWithoutProperties(_AnimatableImage$prop, [\"resizeMode\"]);\n\nfunction AutoHeightImage(props) {\n  var onHeightChange = props.onHeightChange,\n      source = props.source,\n      width = props.width,\n      style = props.style,\n      maxHeight = props.maxHeight,\n      onError = props.onError,\n      rest = _objectWithoutProperties(props, [\"onHeightChange\", \"source\", \"width\", \"style\", \"maxHeight\", \"onError\"]);\n\n  var _useState = useState(getImageSizeFitWidthFromCache(source, width, maxHeight).height || DEFAULT_HEIGHT),\n      _useState2 = _slicedToArray(_useState, 2),\n      height = _useState2[0],\n      setHeight = _useState2[1];\n\n  var mountedRef = useRef(false);\n  useEffect(function () {\n    mountedRef.current = true;\n    return function () {\n      mountedRef.current = false;\n    };\n  }, []);\n  useEffect(function () {\n    (function _callee() {\n      var _await$getImageSizeFi, newHeight;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(getImageSizeFitWidth(source, width, maxHeight));\n\n            case 3:\n              _await$getImageSizeFi = _context.sent;\n              newHeight = _await$getImageSizeFi.height;\n\n              if (mountedRef.current) {\n                setHeight(newHeight);\n                onHeightChange(newHeight);\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              onError(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    })();\n  }, [source, onHeightChange, width, maxHeight]);\n  var imageStyles = {\n    width: width,\n    height: height\n  };\n  var ImageComponent = source.uri ? ImagePolyfill : AnimatableImage;\n  return React.createElement(ImageComponent, _extends({\n    source: source,\n    style: [imageStyles, style],\n    onError: onError\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }));\n}\n\nAutoHeightImage.propTypes = _objectSpread(_objectSpread({}, ImagePropTypes), {}, {\n  width: PropTypes.number.isRequired,\n  maxHeight: PropTypes.number,\n  onHeightChange: PropTypes.func,\n  animated: PropTypes.bool\n});\nAutoHeightImage.defaultProps = {\n  maxHeight: Infinity,\n  onHeightChange: NOOP,\n  animated: false\n};\nexport default AutoHeightImage;","map":{"version":3,"sources":["/Users/apple/Desktop/M.Hero/project/csci3100_project/node_modules/react-native-auto-height-image/AutoHeightImage.js"],"names":["React","useEffect","useState","useRef","ImagePolyfill","AnimatableImage","PropTypes","getImageSizeFitWidth","getImageSizeFitWidthFromCache","NOOP","DEFAULT_HEIGHT","propTypes","resizeMode","ImagePropTypes","AutoHeightImage","props","onHeightChange","source","width","style","maxHeight","onError","rest","height","setHeight","mountedRef","current","newHeight","imageStyles","ImageComponent","uri","number","isRequired","func","animated","bool","defaultProps","Infinity"],"mappings":"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","sourcesContent":["/**\n * @since 2017-04-11 19:10:08\n * @author vivaxy\n */\nimport React, { useEffect, useState, useRef } from 'react';\nimport ImagePolyfill from './ImagePolyfill';\nimport AnimatableImage from './AnimatableImage';\nimport PropTypes from 'prop-types';\n\nimport { getImageSizeFitWidth, getImageSizeFitWidthFromCache } from './cache';\nimport { NOOP, DEFAULT_HEIGHT } from './helpers';\n\n// remove `resizeMode` props from `Image.propTypes`\nconst { resizeMode, ...ImagePropTypes } = AnimatableImage.propTypes;\n\nfunction AutoHeightImage(props) {\n  const {\n    onHeightChange,\n    source,\n    width,\n    style,\n    maxHeight,\n    onError,\n    ...rest\n  } = props;\n  const [height, setHeight] = useState(\n    getImageSizeFitWidthFromCache(source, width, maxHeight).height ||\n      DEFAULT_HEIGHT\n  );\n  const mountedRef = useRef(false);\n\n  useEffect(function () {\n    mountedRef.current = true;\n    return function () {\n      mountedRef.current = false;\n    };\n  }, []);\n\n  useEffect(\n    function () {\n      (async function () {\n        try {\n          const { height: newHeight } = await getImageSizeFitWidth(\n            source,\n            width,\n            maxHeight\n          );\n          if (mountedRef.current) {\n            // might trigger `onHeightChange` with same `height` value\n            // dedupe maybe?\n            setHeight(newHeight);\n            onHeightChange(newHeight);\n          }\n        } catch (e) {\n          onError(e);\n        }\n      })();\n    },\n    [source, onHeightChange, width, maxHeight]\n  );\n\n  // StyleSheet.create will cache styles, not what we want\n  const imageStyles = { width, height };\n\n  // Since it only makes sense to use polyfill with remote images\n  const ImageComponent = source.uri ? ImagePolyfill : AnimatableImage;\n  return (\n    <ImageComponent\n      source={source}\n      style={[imageStyles, style]}\n      onError={onError}\n      {...rest}\n    />\n  );\n}\n\nAutoHeightImage.propTypes = {\n  ...ImagePropTypes,\n  width: PropTypes.number.isRequired,\n  maxHeight: PropTypes.number,\n  onHeightChange: PropTypes.func,\n  animated: PropTypes.bool\n};\n\nAutoHeightImage.defaultProps = {\n  maxHeight: Infinity,\n  onHeightChange: NOOP,\n  animated: false\n};\n\nexport default AutoHeightImage;\n"]},"metadata":{},"sourceType":"module"}