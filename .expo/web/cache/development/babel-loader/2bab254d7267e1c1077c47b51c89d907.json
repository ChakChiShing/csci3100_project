{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/apple/Desktop/M.Hero/project/csci3100_project/component/SettingScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport 'react-native-gesture-handler';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport BudgetScreen from \"BudgetScreen.js\";\nimport CurrencyScreen from \"CurrencyScreen\";\nimport CategoryScreen from \"./component/\";\n\nvar SettingScreen = function (_React$Component) {\n  _inherits(SettingScreen, _React$Component);\n\n  var _super = _createSuper(SettingScreen);\n\n  function SettingScreen() {\n    _classCallCheck(this, SettingScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SettingScreen, [{\n    key: \"render\",\n    value: function render() {\n      var Stack = createStackNavigator();\n      return React.createElement(SafeAreaView, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, React.createElement(NavigationContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }\n      }, React.createElement(Stack.Navigator, {\n        initialRouteName: \"Setting\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Budget\",\n        component: BudgetScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Currency\",\n        component: CurrencyScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Category\",\n        component: CategoryScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }))), React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }), React.createElement(Button, {\n        title: \"Go to Details\",\n        onPress: function onPress() {\n          return navigation.navigate(BudgetScreen);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return SettingScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default SettingScreen;","map":{"version":3,"sources":["/Users/apple/Desktop/M.Hero/project/csci3100_project/component/SettingScreen.js"],"names":["React","Component","NavigationContainer","createStackNavigator","BudgetScreen","CurrencyScreen","CategoryScreen","SettingScreen","Stack","flex","alignItems","justifyContent","navigation","navigate","styles","StyleSheet","create","container","backgroundColor"],"mappings":";;;;;;;;;;;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,cAAP,MAA2B,gBAA3B;AACA,OAAOC,cAAP;;IAGMC,a;;;;;;;;;;;;;WACF,kBAAQ;AAEN,UAAMC,KAAK,GAAGL,oBAAoB,EAAlC;AACA,aACE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAAEM,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,UAAU,EAAE,QAAvB;AAAiCC,UAAAA,cAAc,EAAE;AAAjD,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,QAAA,gBAAgB,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,QAAnB;AAA4B,QAAA,SAAS,EAAEP,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,UAAnB;AAA8B,QAAA,SAAS,EAAEC,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,EAGA,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,UAAnB;AAA8B,QAAA,SAAS,EAAEC,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHA,CADF,CAFF,EAUE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAG;AAAEG,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,UAAU,EAAE,QAAvB;AAAiCC,UAAAA,cAAc,EAAE;AAAjD,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,oBAAC,MAAD;AACF,QAAA,KAAK,EAAC,eADJ;AAEF,QAAA,OAAO,EAAE;AAAA,iBAAMC,UAAU,CAACC,QAAX,CAAoBT,YAApB,CAAN;AAAA,SAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CAVF,CADF;AAsBD;;;;EA1BuBJ,KAAK,CAACC,S;;AA8B9B,IAAMa,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTR,IAAAA,IAAI,EAAE,CADG;AAETS,IAAAA,eAAe,EAAE,MAFR;AAGTR,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf;AASA,eAAeJ,aAAf","sourcesContent":["import 'react-native-gesture-handler';\nimport React, { Component } from 'react';\nimport { StyleSheet, Text, View, Button, SafeAreaView } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport BudgetScreen from \"BudgetScreen.js\";\nimport CurrencyScreen from \"CurrencyScreen\";\nimport CategoryScreen from \"./component/\"\n\n\nclass SettingScreen extends React.Component {\n    render(){\n\n      const Stack = createStackNavigator();\n      return (\n        <SafeAreaView style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n\n          <NavigationContainer>\n            <Stack.Navigator initialRouteName=\"Setting\">\n            <Stack.Screen name=\"Budget\" component={BudgetScreen} />\n            <Stack.Screen name=\"Currency\" component={CurrencyScreen}/>\n            <Stack.Screen name=\"Category\" component={CategoryScreen}/>\n          </Stack.Navigator>\n          </NavigationContainer>\n\n          <View style ={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <Text></Text>\n          <Button\n        title=\"Go to Details\"\n        onPress={() => navigation.navigate(BudgetScreen)}\n      />\n\n          </View>\n      \n        </SafeAreaView>\n      );\n    }\n  }\n  \n  \n    const styles = StyleSheet.create({\n      container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n    });\n  \n    export default SettingScreen;"]},"metadata":{},"sourceType":"module"}